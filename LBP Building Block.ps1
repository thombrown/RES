Param(
   [parameter(Mandatory=$true)]
   [string]$CSV,
   [parameter(Mandatory=$false)]
   [string]$OutputFile = "$env:temp\RESBuildingBlock.xml"
)


$Now = Get-Date –f yyyyMMddHHmmss
if ((test-path $outputfile) -eq $true) {Remove-Item $outputfile}
$XmlWriter = New-Object System.XMl.XmlTextWriter($OutputFile,$Null)
$xmlWriter.Formatting = 'Indented'
$xmlWriter.Indentation = 1
$XmlWriter.IndentChar = "`t"
$xmlWriter.WriteStartDocument()
$XmlWriter.WriteComment('RES ONE Workspace Building Block')
$XmlWriter.WriteComment('Created by Powershell on ' + $Now)
$xmlWriter.WriteStartElement('respowerfuse')
    $guidgen =  [System.GUID]::NewGuid().ToString().ToUpper()
    $guid = "{$guidgen}"
    $XmlWriter.WriteElementString('version', '9.10.1.5')
    $xmlWriter.WriteStartElement('buildingblock')
        $xmlWriter.WriteStartElement('powerzones')

$Data = import-csv $CSV

ForEach ($subnet in $Data){

            $xmlWriter.WriteStartElement('powerzone')
            $xmlWriter.WriteElementString('name',$subnet.Subnets)
            $xmlWriter.WriteElementString('description','Generated by Powershell')
                $xmlWriter.WriteStartElement('powerzonerules')
                    $xmlWriter.WriteStartElement('rule')
                    $xmlWriter.WriteElementString('type','1')
                    $xmlWriter.WriteElementString('filter',$subnet.Subnets)
                    $xmlWriter.WriteElementString('type2','0')
                    $xmlWriter.WriteElementString('filter2','')
                    $xmlWriter.WriteElementString('comments','')
                    $xmlWriter.WriteElementString('enabled','yes')
                    $xmlWriter.WriteEndElement()
                $xmlWriter.WriteEndElement()
            $guidgen =  [System.GUID]::NewGuid().ToString().ToUpper()
            $guid = "{$guidgen}"
            $xmlWriter.WriteElementString('guid',$guid)
            $xmlWriter.WriteElementString('enabled','no')
            $xmlWriter.WriteEndElement()

}


        $xmlWriter.WriteEndElement()        
$xmlWriter.WriteEndElement() 
$xmlWriter.WriteEndElement() 
$xmlWriter.WriteEndDocument()
$xmlWriter.Flush()
$xmlWriter.Close()
